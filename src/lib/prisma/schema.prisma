generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id               Int             @id @default(autoincrement())
  createdAt        DateTime?       @default(now()) @db.Timestamptz(6)
  name             String
  ghLogin          String          @unique
  defaultTeam      String
  teams            teamMembers[]

  @@map("User")
}

model team {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime?       @default(now()) @db.Timestamptz(6)
  name          String          @unique
  members       teamMembers[]
  avatarUrl     String?
  projects      project[]

  @@map("Team")
}

model teamMembers {
  createdAt     DateTime?       @default(now()) @db.Timestamptz(6)
  member        user            @relation(fields:[userId], references:[id])
  team          team            @relation(fields:[teamId], references:[id])
  userId        Int
  teamId        Int

  @@id([userId, teamId])
  @@map("TeamMembers")
}

model project {
  id                   Int       @id @default(autoincrement())
  createdAt            DateTime? @default(now()) @db.Timestamptz(6)
  name                 String    @unique(map: "projects_name_key") @db.VarChar
  description          String?
  owner                String
  projectOwner         team      @relation(fields: [projectOwnerId], references: [id])
  projectOwnerId       Int
  repos                repo[]

  @@map("Project")
}

model repo {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime? @default(now()) @db.Timestamptz(6)
  owner         String
  repo          String
  description   String?
  parentProject String?   @db.VarChar
  project       project?  @relation(fields: [parentProject], references: [name], onDelete: NoAction, onUpdate: NoAction)

  @@map("Repo")
}
