generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime? @default(now()) @db.Timestamptz(6)
  ghLogin     String    @unique
  name        String
  defaultTeam String

  teams teamMember[]
}

model team {
  id        Int          @id @default(autoincrement())
  createdAt DateTime?    @default(now()) @db.Timestamptz(6)
  name      String       @unique
  members   teamMember[]
  avatarUrl String?

  projects project[]
}

model teamMember {
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  member    user      @relation(fields: [userId], references: [id])
  team      team      @relation(fields: [teamId], references: [id])
  userId    Int
  teamId    Int

  @@id([userId, teamId])
}

model project {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime? @default(now()) @db.Timestamptz(6)
  name           String    @unique(map: "projects_name_key") @db.VarChar
  description    String?
  owner          String
  projectOwner   team      @relation(fields: [projectOwnerId], references: [id])
  projectOwnerId Int

  repos repo[]
}

model repo {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime? @default(now()) @db.Timestamptz(6)
  owner         String
  repo          String
  description   String?
  parentProject String?   @db.VarChar
  project       project?  @relation(fields: [parentProject], references: [name], onDelete: NoAction, onUpdate: NoAction)
  tests         test[]

  @@unique(fields: [repo, parentProject], name: "repo_parentProject")
}

model test {
  id      Int      @id @default(autoincrement())
  path    String
  name    String
  repo    repo     @relation(fields: [repoId], references: [id])
  repoId  Int
  results result[]
}

model result {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now()) @db.Timestamptz(6)
  test      test     @relation(fields: [testId], references: [id])
  testId    Int
}
